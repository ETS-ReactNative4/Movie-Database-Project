{"version":3,"sources":["MyLoader/MyLoader.js","Film/Film.js","Movies/Movies.js","Star/Star.js","Login/Login.js","MovieList/MovieList.js","Search/Search.js","Browse/Browse.js","Cart/Cart.js","Employee/EmployeeLogin.js","Employee/EmployeeDashboard.js","FullTextSearch/FullTextSearch.js","FullTextSearch/FullTextResults.js","App.js","serviceWorker.js","index.js"],"names":["MyLoader","react_default","a","createElement","Container","Dimmer","active","inverted","Loader","size","Component","FilmCard","props","Card","key","movie","Content","Header","as","Link","to","pathname","search","movieid","title","Meta","year","director","rating","Description","Stars","list","stars","extra","Genres","genres","Button","color","animated","onClick","handleAddToCart","id","hidden","Icon","name","visible","Film","state","valid","mounted","_this2","this","fetch","window","location","hostname","method","credentials","then","res","status","setState","catch","error","console","log","_this3","query","queryString","parse","es","url","_ref","fetching","failed","data","src_MyLoader_MyLoader","Group","centered","Redirect","Object","keys","map","star","List","Item","Label","link","genre","reload","horizontal","Movies","activeIndex","films","StarMovies","movies","Star","born","birthYear","Login","username","password","recaptcha","disable_button","verifyCallback","token","_this","handleNameChange","event","target","value","handlePassChange","handleSubmit","preventDefault","creds","g_recaptcha_response","getSession","headers","Content-Type","body","JSON","stringify","document","getElementById","reset","json","getCust","Grid","textAlign","verticalAlign","Column","style","maxWidth","Form","onSubmit","Segment","stacked","Input","fluid","icon","placeholder","onChange","type","Message","header","content","lib_es","sitekey","disabled","getRetVal","options","text","SearchResults","MovieList","handleLimitChange","e","limit","parseInt","activePage","getMovies","renderContent","Search","pages","total","sort","order","handleTitleChange","handleDirectorChange","handleYearChange","handlePaginationChange","handleOrderChange","handleSortChange","numRecords","Math","ceil","widths","Select","Pagination","totalPages","onPageChange","siblingRange","get","getPrototypeOf","prototype","call","letteroptions","Browse","letter","handleGenreChange","handleLetterChange","parseOptions","nextProps","isEmpty","obj","prop","EmptyCart","circular","OrderNums","Orders","items","Cart","classCallCheck","possibleConstructorReturn","carty","customer","formData","firstName","lastName","email","address","ccId","expiration","transaction","handleAdd","item","crt","objectSpread","handleUpdateCart","sessionStorage","setItem","handleMinus","handleCheckout","form","cust","every","handleInputChange","bind","assertThisInitialized","cart","getItem","assign","n","v","correct","padded","quantity","compact","attached","Modal","closeIcon","trigger","defaultValue","Actions","_unused","EmployeeLogin","employee","theme","scheme","author","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","EmployeeDashboard","schema","loading","starname","stardob","genrename","has_message","message","handleMovie","handleStar","handleGenre","getSchemaDatabase","marginTop","width","lib_default","success","searchDebounced","AwesomeDebouncePromise","forEach","push","description","FullTextSearch","redir","fullredir","cache","resetComponent","isLoading","results","handleResultSelect","result","handleSearchChange","_callee","_ref2","regenerator_default","wrap","_context","prev","next","length","abrupt","setTimeout","sent","stop","modules_Search_Search","onResultSelect","onSearchChange","input","action","paddingTop","paddingBottom","paddingLeft","FullTextResults","marginBottom","App","is_employee","getEmp","emp","BrowserRouter","basename","Menu","Route","path","exact","render","src_Movies_Movies","src_Star_Star","src_Film_Film","src_Login_Login","Employee_EmployeeLogin","Employee_EmployeeDashboard","FullTextSearch_FullTextResults","src_Search_Search","src_Browse_Browse","src_Cart_Cart","Boolean","match","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00196b19.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Container, Dimmer, Loader} from \"semantic-ui-react\";\r\n\r\n\r\nclass MyLoader extends Component{\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Dimmer active inverted>\r\n                    <Loader size='massive'>Loading</Loader>\r\n                </Dimmer>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyLoader;\r\n","import React, { Component } from 'react';\r\nimport { Fetch } from 'react-request';\r\nimport queryString from 'query-string';\r\nimport {Stars,Genres} from \"../Movies/Movies\";\r\nimport {Button, Card, Container, Icon} from \"semantic-ui-react\";\r\nimport {Redirect} from \"react-router\";\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction FilmCard(props){\r\n    return(\r\n      <Card key={props.movie}>\r\n          <Card.Content>\r\n              <Card.Header\r\n              as={Link}\r\n              to={{\r\n                  pathname: '/movie',\r\n                  search: '?id='+props.movieid\r\n              }}>\r\n                      {props.title}\r\n              </Card.Header>\r\n              <Card.Meta>\r\n                  Year: {props.year}<br/>\r\n                  Director: {props.director}<br/>\r\n                  Rating: {props.rating}\r\n              </Card.Meta>\r\n              <Card.Description>\r\n                  <Stars list={props.stars}/>\r\n              </Card.Description>\r\n          </Card.Content>\r\n          <Card.Content extra>\r\n              <Genres list={props.genres}/>\r\n          </Card.Content>\r\n          <Button color={'teal'} animated={\"fade\"} onClick={()=>props.handleAddToCart({id: props.movieid,\r\n          title: props.title, director: props.director, year: props.year, rating: props.rating})}>\r\n              <Button.Content hidden><Icon name={\"plus\"}/></Button.Content>\r\n              <Button.Content visible>Add to Cart</Button.Content>\r\n          </Button>\r\n      </Card>\r\n    );\r\n}\r\nclass Film extends Component {\r\n    state = {\r\n        valid: false,\r\n        mounted: false\r\n    };\r\n    componentDidMount(){\r\n        fetch('https://'+window.location.hostname+':8443/cs122b/login', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        }).then(\r\n            (res) => {\r\n                if(res.status === 403){\r\n                }\r\n                else{\r\n                    this.setState({valid: true});\r\n                }\r\n                this.setState({mounted:true});\r\n            }\r\n        ).catch((error) =>\r\n            console.log(error)\r\n        )\r\n    }\r\n    componentWillUnmount(){\r\n        this.setState({mounted:false});\r\n    }\r\n    render(){\r\n        const query = queryString.parse(this.props.location.search);\r\n        if(this.state.mounted && this.state.valid){\r\n            return (\r\n                <Fetch url={'https://'+window.location.hostname+':8443/cs122b/movies?id='+query.id} credentials={'include'}>\r\n                    {({ fetching, failed, data }) => {\r\n                        if (fetching) {\r\n                            return(\r\n                                <MyLoader/>\r\n                            );\r\n                        }\r\n                        if (failed) {\r\n                            console.log(\"Error in film.js\");\r\n                        }\r\n                        if (data) {\r\n                            return (\r\n                                <Container>\r\n                                    <Card.Group centered>\r\n                                        <FilmCard movieid={data.id} title={data.title}\r\n                                        year={data.year} director={data.director} rating={data.rating}\r\n                                        stars = {data.stars} genres={data.genres} handleAddToCart={this.props.handleAddToCart}/>\r\n                                    </Card.Group>\r\n                                </Container>\r\n                            );\r\n                        }\r\n                        return null;\r\n                    }}\r\n                </Fetch>\r\n            );\r\n        }\r\n        else if(this.state.mounted && !this.state.valid){\r\n            return(\r\n                <Redirect to={\"/login\"}/>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <MyLoader/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Film;\r\nexport {FilmCard};","import React, {Component} from 'react';\r\nimport {Fetch} from 'react-request';\r\nimport {Link} from 'react-router-dom';\r\nimport {Container, Card, List, Icon, Label,} from 'semantic-ui-react';\r\nimport {Redirect} from 'react-router';\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\nimport {FilmCard} from \"../Film/Film\";\r\n\r\n\r\nfunction Stars(props) {\r\n  const stars = Object.keys(props.list).map((star) =>\r\n    <List.Item key={star}>\r\n      <Link to={{\r\n        pathname: \"/star\",\r\n        search: \"?id=\" + props.list[star].id\r\n      }}>\r\n        <Label>\r\n          <Icon name={\"male\"}/>{props.list[star].name}\r\n        </Label>\r\n      </Link>\r\n    </List.Item>\r\n  );\r\n  return (\r\n    <List link>\r\n      <List.Item active>Actors</List.Item>\r\n      {stars}\r\n    </List>\r\n  );\r\n}\r\n\r\nfunction Genres(props) {\r\n  const genres = Object.keys(props.list).map((genre) =>\r\n    <List.Item key={genre}\r\n               as={Link} to={{\r\n      pathname: '/browse',\r\n      state: {genre: props.list[genre], reload: \"yes\"}\r\n    }}\r\n    >\r\n      {props.list[genre]}\r\n    </List.Item>\r\n  );\r\n  return (\r\n    <List horizontal>\r\n      {genres}\r\n    </List>\r\n  );\r\n}\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    activeIndex: 0,\r\n    valid: false,\r\n    mounted: false,\r\n    data: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/login', {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    }).then(\r\n      (res) => {\r\n        if (res.status === 403) {\r\n          this.setState({valid: false});\r\n        }\r\n        else {\r\n          this.setState({valid: true});\r\n        }\r\n        this.setState({mounted: true});\r\n      }\r\n    ).catch((error) =>\r\n      console.log(error)\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({mounted: false});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.mounted && this.state.valid) {\r\n      return (\r\n        <Fetch url={'https://' + window.location.hostname + ':8443/cs122b/top20'} credentials={'include'}>\r\n          {({fetching, failed, data}) => {\r\n            if (fetching) {\r\n              return (\r\n                <MyLoader/>\r\n              );\r\n            }\r\n\r\n            if (failed) {\r\n              console.log(\"Error\");\r\n            }\r\n\r\n            if (data) {\r\n              const films = Object.keys(data).map((movie) =>\r\n                <FilmCard key={movie} movieid={data[movie].id} title={data[movie].title}\r\n                          year={data[movie].year} director={data[movie].director} rating={data[movie].rating}\r\n                          stars={data[movie].stars} genres={data[movie].genres}\r\n                          handleAddToCart={this.props.handleAddToCart}/>\r\n              );\r\n              return (\r\n                <Container>\r\n                  <Card.Group centered>{films}</Card.Group>\r\n                </Container>\r\n              );\r\n            }\r\n            return null;\r\n          }}\r\n        </Fetch>\r\n      );\r\n    }\r\n    else if (!this.state.valid && this.state.mounted) {\r\n      return (\r\n        <Redirect to={\"/login\"}/>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <MyLoader/>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Movies;\r\nexport {Stars, Genres};","import React, { Component } from 'react';\r\nimport { Fetch } from 'react-request';\r\nimport {Link} from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport {Card, List, Icon, Label, Container, Header,} from 'semantic-ui-react';\r\nimport {Redirect} from \"react-router\";\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\n\r\nfunction StarMovies(props){\r\n    const movies = Object.keys(props.list).map((movie)=>\r\n        <List.Item key={movie}>\r\n            <Link to={{\r\n                pathname: \"/movie\",\r\n                search: \"?id=\"+props.list[movie].id\r\n            }}>\r\n                <Label>\r\n                    <Icon name={\"film\"}/>{props.list[movie].title}\r\n                </Label>\r\n            </Link>\r\n        </List.Item>\r\n    );\r\n    return(\r\n      <List link>\r\n          {movies}\r\n      </List>\r\n    );\r\n}\r\nclass Star extends Component {\r\n    state = {\r\n        valid: false,\r\n        mounted: false\r\n    };\r\n    componentDidMount(){\r\n        fetch('https://'+window.location.hostname+':8443/cs122b/login', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        }).then(\r\n            (res) => {\r\n                if(res.status === 403){\r\n                    console.log(\"Invalid session\");\r\n                }\r\n                else{\r\n                    this.setState({valid: true});\r\n                }\r\n                this.setState({mounted:true});\r\n            }\r\n        ).catch((error) =>\r\n            console.log(error)\r\n        )\r\n    }\r\n    componentWillUnmount(){\r\n        this.setState({mounted:false});\r\n    }\r\n    render(){\r\n        const query = queryString.parse(this.props.location.search);\r\n        if(this.state.mounted && this.state.valid){\r\n            return (\r\n                <Fetch url={'https://'+window.location.hostname+':8443/cs122b/star?id='+query.id} credentials={'include'}>\r\n                    {({ fetching, failed, data }) => {\r\n                        if (fetching) {\r\n                            return(\r\n                                <MyLoader/>\r\n                            );\r\n                        }\r\n                        if (failed) {\r\n                            console.log(\"Error\");\r\n                        }\r\n                        if (data) {\r\n                            let born = \"Born in \"+ data.birthYear;\r\n                            if(data.birthYear === 0){\r\n                                born = \" \";\r\n                            }\r\n                            return (\r\n                                <Container>\r\n                                    <Card.Group centered>\r\n                                        <Card>\r\n                                            <Card.Content>\r\n                                                <Card.Header>\r\n                                                    <Header as={\"h1\"}>\r\n                                                        {data.title}\r\n                                                    </Header>\r\n                                                </Card.Header>\r\n                                                <Card.Meta>\r\n                                                    {born}\r\n                                                </Card.Meta>\r\n                                                <Card.Description>\r\n                                                    <StarMovies list={data.movies}/>\r\n                                                </Card.Description>\r\n                                            </Card.Content>\r\n                                        </Card>\r\n                                    </Card.Group>\r\n                                </Container>\r\n                            );\r\n                        }\r\n                        return null;\r\n                    }}\r\n                </Fetch>\r\n            );\r\n\r\n        }\r\n        else if(!this.state.valid && this.state.mounted){\r\n            return(\r\n                <Redirect to={\"/login\"}/>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <MyLoader/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Star;\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router';\r\nimport {Button, Form, Grid, Header, Message, Segment} from \"semantic-ui-react\";\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    recaptcha: \"\",\r\n    disable_button: true,\r\n    valid: false,\r\n    error: false,\r\n    mounted: false\r\n  };\r\n\r\n  verifyCallback = (token) => {\r\n    this.setState({recaptcha: token, disable_button: false});\r\n    console.log(token);\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/login', {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    }).then(\r\n      (res) => {\r\n        if (res.status === 403) {\r\n          console.log(\"Invalid session\");\r\n        } else {\r\n          console.log(\"Logged in\");\r\n          this.setState({valid: true});\r\n        }\r\n        this.setState({mounted: true});\r\n      }\r\n    ).catch((error) =>\r\n      console.log(error)\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({mounted: false});\r\n  }\r\n\r\n  handleNameChange = event => {\r\n    this.setState({username: event.target.value});\r\n  };\r\n  handlePassChange = event => {\r\n    this.setState({password: event.target.value});\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const creds = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      g_recaptcha_response: this.state.recaptcha\r\n    };\r\n    this.getSession(creds);\r\n  };\r\n\r\n  getSession(creds) {\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(creds)\r\n    }).then(\r\n      (res) => {\r\n        if (res.status === 403) {\r\n          document.getElementById(\"Form\").reset();\r\n          this.setState({valid: false});\r\n          this.setState({error: true});\r\n        } else {\r\n          this.setState({valid: true});\r\n        }\r\n        return res.json();\r\n      }\r\n    ).then(\r\n      data => {\r\n        this.props.getCust(data);\r\n      }\r\n    )\r\n      .catch((error) =>\r\n        console.log(error)\r\n      )\r\n  }\r\n\r\n  getRetVal() {\r\n    return (\r\n      <Redirect to={\"/\"}/>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.valid && this.state.mounted) {\r\n      return (\r\n        <div>\r\n          <Grid textAlign={'center'} verticalAlign={\"middle\"}>\r\n            <Grid.Column style={{maxWidth: 450}}>\r\n              <Header as={'h3'} color={'teal'} textAlign={'center'}>\r\n                Login to your account\r\n              </Header>\r\n              <Form size={'large'} onSubmit={this.handleSubmit} id={'Form'} error>\r\n                <Segment stacked>\r\n                  <Form.Input fluid icon={'user'}\r\n                              placeholder={'Username'}\r\n                              onChange={this.handleNameChange}\r\n                  />\r\n                  <Form.Input fluid icon={'lock'}\r\n                              placeholder={'Password'}\r\n                              onChange={this.handlePassChange}\r\n                              type={'password'}/>\r\n                  {this.state.error\r\n                    ?\r\n                    <Message\r\n                      error={this.state.error}\r\n                      header={\"Error\"}\r\n                      content={\"Invalid Username/Password\"}\r\n                    />\r\n                    :\r\n                    null\r\n                  }\r\n                  <Segment>\r\n                    <ReCAPTCHA\r\n                      sitekey={'6LcOX5AUAAAAAGBgvP1F36tDbNdub8r2Bnhmt78H'}\r\n                      onChange={this.verifyCallback}\r\n                    />\r\n                  </Segment>\r\n                  <Button disabled={this.state.disable_button} color={'teal'} fluid size={'large'}\r\n                          type={\"submit\"}>\r\n                    Submit\r\n                  </Button>\r\n                </Segment>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    } else if (this.state.valid && this.state.mounted) {\r\n      console.log(\"Back to home\");\r\n      return (\r\n        <div>\r\n          {this.getRetVal()}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <MyLoader/>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\nimport {Redirect} from \"react-router\";\r\nimport {FilmCard} from \"../Film/Film\";\r\nimport {Container, Card} from \"semantic-ui-react\";\r\n\r\nconst options = [\r\n    {key: '10', text: '10 Per Page', value: '10'},\r\n    {key: '25', text: '25 Per Page', value: '25'},\r\n    {key: '50', text: '50 Per Page', value: '50'},\r\n    {key: '100', text: '100 Per Page', value: '100'},\r\n];\r\n\r\nfunction SearchResults(props) {\r\n    const films = Object.keys(props.data).map((movie) =>\r\n        <FilmCard key={movie} movieid={props.data[movie].id} title={props.data[movie].title}\r\n                  year={props.data[movie].year} director={props.data[movie].director} rating={props.data[movie].rating}\r\n                  stars={props.data[movie].stars} genres={props.data[movie].genres}\r\n                  handleAddToCart={props.handleAddToCart}/>\r\n    );\r\n    return (\r\n        <Container>\r\n            <Card.Group centered>{films}</Card.Group>\r\n        </Container>\r\n    );\r\n}\r\n\r\nclass MovieList extends Component {\r\n    state = {\r\n        valid: false,\r\n        mounted: false,\r\n    };\r\n    handleLimitChange = (e, data) => {\r\n        this.setState({limit: parseInt(data.value, 10)});\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://' + window.location.hostname + ':8443/cs122b/login', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        }).then(\r\n            (res) => {\r\n                if (res.status === 403) {\r\n                    this.setState({valid: false});\r\n                } else {\r\n                    this.setState({valid: true});\r\n                }\r\n                this.setState({mounted: true});\r\n            }\r\n        ).catch((error) =>\r\n            console.log(error)\r\n        )\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.setState({mounted: false});\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({activePage: 1}, this.getMovies);\r\n    };\r\n\r\n    getMovies() {\r\n    }\r\n\r\n    renderContent() {\r\n        switch (this.state.search) {\r\n            case \"loading\":\r\n                return (\r\n                    <MyLoader/>\r\n                );\r\n            case \"received\":\r\n                return (\r\n                    <SearchResults data={this.state.data} handleAddToCart={this.props.handleAddToCart}/>\r\n                );\r\n            default:\r\n                return (\r\n                    null\r\n                );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.mounted && this.state.valid) {\r\n            return (\r\n                <div>\r\n                    {\r\n                        this.renderContent()\r\n                    }\r\n                </div>\r\n            );\r\n        } else if (!this.state.valid && this.state.mounted) {\r\n            return (\r\n                <Redirect to={\"/login\"}/>\r\n            );\r\n        } else {\r\n            return (\r\n                <MyLoader/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default MovieList;\r\nexport {SearchResults, options};\r\n","import React from 'react';\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\nimport {Redirect} from \"react-router\";\r\nimport MovieList, {options} from \"../MovieList/MovieList\"\r\nimport {Container, Form, Button, Segment, Pagination} from \"semantic-ui-react\";\r\n\r\n\r\nclass Search extends MovieList {\r\n    state = {\r\n        title: \"\",\r\n        search: \"notsearched\",\r\n        director: \"\",\r\n        year: \"\",\r\n        name: \"\",\r\n        data: null,\r\n        limit: 10,\r\n        pages: 0,\r\n        activePage: 1,\r\n        total: 0,\r\n        sort: \"rating\",\r\n        order: \"DESC\"\r\n    };\r\n\r\n    handleTitleChange = event => {\r\n        this.setState({title: event.target.value})\r\n    };\r\n    handleDirectorChange = event => {\r\n        this.setState({director: event.target.value})\r\n    };\r\n    handleYearChange = event => {\r\n        this.setState({year: event.target.value})\r\n    };\r\n    handleNameChange = event => {\r\n        this.setState({name: event.target.value})\r\n    };\r\n    handlePaginationChange = (e, {activePage}) => this.setState({activePage}, this.getMovies)\r\n    handleOrderChange = (e, data) => {\r\n        this.setState({order: data.value});\r\n    };\r\n    handleSortChange = (e, data) => {\r\n        this.setState({sort: data.value});\r\n\r\n    };\r\n\r\n    getMovies() {\r\n        this.setState({search: \"loading\"});\r\n        fetch('https://' + window.location.hostname + ':8443/cs122b/search?title=' + this.state.title +\r\n            '&year=' + this.state.year + '&director=' + this.state.director + '&name=' + this.state.name +\r\n            '&limit=' + this.state.limit + '&offset=' + ((this.state.activePage - 1) * this.state.limit +\r\n                '&sort=' + this.state.sort + '&order=' + this.state.order), {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        }).then(\r\n            (res) => res.json()\r\n        ).then(\r\n            data => this.setState({data: data.movies, total: data.numRecords, search: \"received\"}, function () {\r\n                this.setState({pages: Math.ceil(this.state.total / this.state.limit)})\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.mounted && this.state.valid) {\r\n            return (\r\n                <div>\r\n                    <Segment>\r\n                        <Form size={'large'} onSubmit={this.handleSubmit}>\r\n                            <Form.Group widths={'equal'}>\r\n                                <Form.Input fluid icon={'film'}\r\n                                            placeholder={'Movie Name'}\r\n                                            onChange={this.handleTitleChange}\r\n                                />\r\n                                <Form.Input fluid icon={'star outline'}\r\n                                            placeholder={'Star Name'}\r\n                                            onChange={this.handleNameChange}\r\n                                />\r\n                                <Form.Input fluid icon={'male'}\r\n                                            placeholder={'Director'}\r\n                                            onChange={this.handleDirectorChange}\r\n                                />\r\n                                <Form.Input fluid icon={'calendar alternate outline'}\r\n                                            placeholder={'Year'}\r\n                                            onChange={this.handleYearChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group widths={'equal'}>\r\n                                <Form.Select fluid\r\n                                             placeholder={'Sort'}\r\n                                             onChange={this.handleSortChange}\r\n                                             options={[{key: 1, text: 'Rating', value: 'rating'},\r\n                                                 {key: 2, text: 'Title', value: 'title'}]}\r\n                                />\r\n                                <Form.Select fluid\r\n                                             placeholder={'Order Asc/Desc'}\r\n                                             onChange={this.handleOrderChange}\r\n                                             options={[{key: 1, text: 'Ascending', value: 'ASC'},\r\n                                                 {key: 2, text: 'Descending', value: 'DESC'}]}\r\n                                />\r\n                                <Form.Select fluid\r\n                                             placeholder={'Results Per Page'}\r\n                                             onChange={this.handleLimitChange}\r\n                                             options={options}\r\n                                />\r\n                                <Button color={'teal'} fluid size={'small'} type={\"submit\"}>\r\n                                    Search\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        {\r\n                            (this.state.search !== \"notsearched\") ?\r\n                                <Container textAlign={\"center\"}>\r\n                                    <Pagination\r\n                                        totalPages={this.state.pages}\r\n                                        activePage={this.state.activePage}\r\n                                        onPageChange={this.handlePaginationChange}\r\n                                        siblingRange={2}\r\n                                    />\r\n                                </Container>\r\n                                : null\r\n                        }\r\n                    </Segment>\r\n                    {\r\n                        super.render(this.props)\r\n                    }\r\n                </div>\r\n            );\r\n        } else if (!this.state.valid && this.state.mounted) {\r\n            return (\r\n                <Redirect to={\"/login\"}/>\r\n            );\r\n        } else {\r\n            return (\r\n                <MyLoader/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport MovieList, {options} from \"../MovieList/MovieList\";\r\nimport {Redirect} from \"react-router\";\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\nimport {Button, Container, Form, Pagination, Segment} from \"semantic-ui-react\";\r\n\r\nconst letteroptions = [\r\n  {key: '1', text: 'a', value: 'a'},\r\n  {key: '2', text: 'b', value: 'b'},\r\n  {key: '3', text: 'c', value: 'c'},\r\n  {key: '4', text: 'd', value: 'd'},\r\n  {key: '5', text: 'e', value: 'e'},\r\n  {key: '6', text: 'f', value: 'f'},\r\n  {key: '7', text: 'g', value: 'g'},\r\n  {key: '8', text: 'h', value: 'h'},\r\n  {key: '9', text: 'i', value: 'i'},\r\n  {key: '10', text: 'j', value: 'j'},\r\n  {key: '11', text: 'k', value: 'k'},\r\n  {key: '12', text: 'l', value: 'l'},\r\n  {key: '13', text: 'm', value: 'm'},\r\n  {key: '14', text: 'n', value: 'n'},\r\n  {key: '15', text: 'o', value: 'o'},\r\n  {key: '16', text: 'p', value: 'p'},\r\n  {key: '17', text: 'q', value: 'q'},\r\n  {key: '18', text: 'r', value: 'r'},\r\n  {key: '19', text: 's', value: 's'},\r\n  {key: '20', text: 't', value: 't'},\r\n  {key: '21', text: 'u', value: 'u'},\r\n  {key: '22', text: 'v', value: 'v'},\r\n  {key: '23', text: 'w', value: 'w'},\r\n  {key: '24', text: 'x', value: 'x'},\r\n  {key: '25', text: 'y', value: 'y'},\r\n  {key: '26', text: 'z', value: 'z'},\r\n  {key: '27', text: '0', value: '0'},\r\n  {key: '28', text: '1', value: '1'},\r\n  {key: '29', text: '2', value: '2'},\r\n  {key: '30', text: '3', value: '3'},\r\n  {key: '31', text: '5', value: '5'},\r\n  {key: '32', text: '6', value: '6'},\r\n  {key: '33', text: '7', value: '7'},\r\n  {key: '34', text: '8', value: '8'},\r\n  {key: '35', text: '9', value: '9'},\r\n];\r\n\r\nclass Browse extends MovieList {\r\n  state = {\r\n    search: \"notsearched\",\r\n    genre: \"\",\r\n    letter: \"\",\r\n    limit: 10,\r\n    pages: 0,\r\n    activePage: 1,\r\n    sort: \"rating\",\r\n    order: \"DESC\",\r\n    genres: []\r\n  };\r\n  handlePaginationChange = (e, {activePage}) => this.setState({activePage}, this.getMovies)\r\n\r\n  getMovies() {\r\n    this.setState({search: \"loading\"});\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/browse?genre=' + this.state.genre +\r\n      '&letter=' + this.state.letter + '&limit=' + this.state.limit + '&offset=' + ((this.state.activePage - 1) * this.state.limit) +\r\n      '&sort=' + this.state.sort + '&order=' + this.state.order, {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    }).then(\r\n      (res) => res.json()\r\n    ).then(\r\n      data => this.setState({data: data.movies, total: data.numRecords, search: \"received\"}, function () {\r\n        this.setState({pages: Math.ceil(this.state.total / this.state.limit)})\r\n      })\r\n    );\r\n  }\r\n\r\n  parseOptions(list){\r\n    return list.map((key) => {\r\n      return { key: key, text: key,value: key};\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount();\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/browse'\r\n      , {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    }).then(\r\n      (res) => res.json()\r\n    ).then(\r\n      data => {\r\n        this.setState({genres: this.parseOptions(data)});\r\n      }\r\n    );\r\n    try {\r\n      this.setState({genre: this.props.location.state.genre}, function () {\r\n        if (this.state.genre === null) {\r\n          this.setState({genre: \"\"});\r\n        }\r\n        else {\r\n          this.getMovies();\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(\"Accessed without passing genre state\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.location.state.reload === \"yes\") {\r\n      this.setState({genre: nextProps.location.state.genre}, function () {\r\n        this.getMovies()\r\n      });\r\n    }\r\n  }\r\n\r\n  handleGenreChange = (e, data) => {\r\n    this.setState({genre: data.value, letter: ''});\r\n  };\r\n  handleLetterChange = (e, data) => {\r\n    this.setState({letter: data.value, genre: ''});\r\n  };\r\n  handleOrderChange = (e, data) => {\r\n    this.setState({order: data.value});\r\n  };\r\n  handleSortChange = (e, data) => {\r\n    this.setState({sort: data.value});\r\n  };\r\n\r\n  render() {\r\n    if (this.state.mounted && this.state.valid) {\r\n      return (\r\n        <div>\r\n          <Segment>\r\n            <Form size={'large'} onSubmit={this.handleSubmit}>\r\n              <Form.Group widths={'equal'}>\r\n                <Form.Select fluid\r\n                             placeholder={'Genre'}\r\n                             value={this.state.genre}\r\n                             onChange={this.handleGenreChange}\r\n                             options={this.state.genres}\r\n                />\r\n                <Form.Select fluid\r\n                             placeholder={'Starting Letter'}\r\n                             value={this.state.letter}\r\n                             onChange={this.handleLetterChange}\r\n                             options={letteroptions}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group widths={'equal'}>\r\n                <Form.Select fluid\r\n                             placeholder={'Sort'}\r\n                             onChange={this.handleSortChange}\r\n                             options={[{key: 1, text: 'Rating', value: 'rating'},\r\n                               {key: 2, text: 'Title', value: 'title'}]}\r\n                />\r\n                <Form.Select fluid\r\n                             placeholder={'Order Asc/Desc'}\r\n                             onChange={this.handleOrderChange}\r\n                             options={[{key: 1, text: 'Ascending', value: 'ASC'},\r\n                               {key: 2, text: 'Descending', value: 'DESC'}]}\r\n                />\r\n                <Form.Select fluid\r\n                             placeholder={'Results Per Page'}\r\n                             onChange={this.handleLimitChange}\r\n                             options={options}\r\n                />\r\n                <Button color={'teal'} fluid size={'small'} type={\"submit\"}>\r\n                  Browse\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n            {\r\n              (this.state.search !== \"notsearched\") ?\r\n                <Container textAlign={\"center\"}>\r\n                  <Pagination\r\n                    totalPages={this.state.pages}\r\n                    activePage={this.state.activePage}\r\n                    onPageChange={this.handlePaginationChange}\r\n                    siblingRange={2}\r\n                  />\r\n                </Container>\r\n                : null\r\n            }\r\n          </Segment>\r\n          {\r\n            super.render(this.props)\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n    else if (!this.state.valid && this.state.mounted) {\r\n      return (\r\n        <Redirect to={'/login'}/>\r\n      );\r\n    }\r\n    else {\r\n      return (<MyLoader/>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Browse;","import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\nimport {Button, Container, Form, Header, Icon, Input, Modal, Segment} from \"semantic-ui-react\";\r\n\r\nfunction isEmpty(obj) {\r\n    for (var prop in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction EmptyCart() {\r\n    return (\r\n        <Container>\r\n            <Header as={'h1'} icon textAlign={'center'}>\r\n                <Icon name={'shopping cart'} circular/>\r\n                <Header.Content>Cart Empty</Header.Content>\r\n            </Header>\r\n        </Container>\r\n    );\r\n}\r\nfunction OrderNums(props){\r\n    const list = Object.keys(props.list).map((key) =>\r\n        <Segment key={key}>\r\n            <b>OrderNumber: </b>\r\n            {\r\n                props.list[key]\r\n            }\r\n        </Segment>\r\n    );\r\n    return(\r\n        <Segment.Group>\r\n            {\r\n                list\r\n            }\r\n        </Segment.Group>\r\n    );\r\n}\r\nfunction Orders(props) {\r\n    const items = Object.keys(props.res).map((key) =>\r\n        <Segment key={key}>\r\n            <Header as={'h1'}>\r\n                {props.movies[key].title}\r\n            </Header>\r\n            <OrderNums list={props.res[key]}/>\r\n        </Segment>\r\n    );\r\n    return (\r\n        <Container>\r\n            {items}\r\n        </Container>\r\n    );\r\n}\r\n\r\nclass Cart extends Component {\r\n    state = {\r\n        valid: false,\r\n        mounted: false,\r\n        carty: {},\r\n        customer: {},\r\n        formData: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            address: '',\r\n            ccId: '',\r\n            expiration: ''\r\n        },\r\n        error: {\r\n            firstName: false,\r\n            lastName: false,\r\n            email: false,\r\n            address: false,\r\n            ccId: false,\r\n            expiration: false,\r\n        },\r\n        transaction: false,\r\n        disabled: true,\r\n        res: {}\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({carty: this.props.cart}, function () {\r\n            if (isEmpty(this.state.carty)) {\r\n                let crt = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n                if (!isEmpty(crt)) {\r\n                    this.setState({carty: crt})\r\n                }\r\n            }\r\n        });\r\n        this.setState({customer: this.props.customer}, function () {\r\n            let cust = JSON.parse(sessionStorage.getItem(\"customer\"));\r\n            if (!isEmpty(cust)) {\r\n                this.setState({customer: cust}, function () {\r\n                    let form = {...this.state.formData};\r\n                    form[\"firstName\"] = this.state.customer.firstName;\r\n                    form[\"lastName\"] = this.state.customer.lastName;\r\n                    form[\"email\"] = this.state.customer.email;\r\n                    form[\"address\"] = this.state.customer.address;\r\n                    this.setState({formData: form});\r\n                });\r\n            }\r\n            else{\r\n                let form = {...this.state.formData};\r\n                form[\"firstName\"] = this.state.customer.firstName;\r\n                form[\"lastName\"] = this.state.customer.lastName;\r\n                form[\"email\"] = this.state.customer.email;\r\n                form[\"address\"] = this.state.customer.address;\r\n                this.setState({formData: form});\r\n            }\r\n        });\r\n        fetch('https://' + window.location.hostname + ':8443/cs122b/login', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        }).then(\r\n            (res) => {\r\n                if (res.status === 403) {\r\n                }\r\n                else {\r\n                    this.setState({valid: true});\r\n                }\r\n                this.setState({mounted: true});\r\n            }\r\n        ).catch((error) =>\r\n            console.log(error)\r\n        )\r\n    }\r\n\r\n    handleAdd = (item) => {\r\n        let crt = {...this.state.carty};\r\n        crt[item.id][\"quantity\"] += 1;\r\n        this.setState({carty: crt}, function () {\r\n            this.props.handleUpdateCart(this.state.carty);\r\n            sessionStorage.setItem(\"cart\", JSON.stringify(this.state.carty));\r\n        });\r\n    };\r\n    handleMinus = (item) => {\r\n        let crt = {...this.state.carty};\r\n        crt[item.id][\"quantity\"] -= 1;\r\n        if (crt[item.id][\"quantity\"] <= 0) {\r\n            delete crt[item.id];\r\n        }\r\n        this.setState({carty: crt}, function () {\r\n            this.props.handleUpdateCart(this.state.carty);\r\n            sessionStorage.setItem(\"cart\", JSON.stringify(this.state.carty));\r\n        });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.setState({mounted: false});\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        let formData = Object.assign({}, this.state.formData);\r\n        formData[e.target.name] = e.target.value;\r\n        let n = e.target.name;\r\n        let v = e.target.value;\r\n        this.setState({formData}, function () {\r\n            let e = {...this.state.error};\r\n            e[n] = this.state.customer[n] !== v;\r\n            this.setState({error: e}, function(){\r\n                let form = this.state.formData;\r\n                let cust = this.state.customer;\r\n                let correct = Object.keys(form).every(function(key) {\r\n                    return form[key] === cust[key];\r\n                });\r\n                correct = !correct;\r\n                this.setState({disabled: correct})\r\n            });\r\n        });\r\n    }\r\n\r\n    handleCheckout = event => {\r\n        let form = this.state.formData;\r\n        let cust = this.state.customer;\r\n        let correct = Object.keys(form).every(function(key) {\r\n            return form[key] === cust[key];\r\n        });\r\n        if (correct) {\r\n            let crt = {...this.state.carty};\r\n            crt['customerId'] = this.state.customer[\"id\"];\r\n            fetch('https://' + window.location.hostname + ':8443/cs122b/sale', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(crt)\r\n            }).then((res) => res.json())\r\n                .then(\r\n                    data => {\r\n                        this.setState({res: data, transaction: true});\r\n                        console.log(data);\r\n                    }\r\n                ).catch((error) => console.log(error))\r\n        }\r\n        else{\r\n            console.log(form);\r\n            console.log(cust);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.mounted && this.state.valid) {\r\n            try {\r\n                if (!isEmpty(this.state.carty)) {\r\n                    const items = Object.keys(this.state.carty).map((item) =>\r\n                        <Segment key={item} padded={'very'}>\r\n                            <Header as={'h1'}>\r\n                                {this.state.carty[item].title}\r\n                            </Header>\r\n                            <Container>\r\n                                <p>\r\n                                    Year: {this.state.carty[item].year}<br/>\r\n                                    Director: {this.state.carty[item].director}<br/>\r\n                                    Rating: {this.state.carty[item].rating}<br/>\r\n                                </p>\r\n                            </Container>\r\n                            <br/>\r\n                            <Container>\r\n                                <Input fluid value={\r\n                                    this.state.carty[item].quantity}\r\n                                />\r\n                                <Button.Group compact attached={'bottom'}>\r\n                                    <Button icon={'minus'} color={'teal'}\r\n                                            onClick={() => this.handleMinus(this.state.carty[item])}/>\r\n                                    <Button icon={'plus'} color={'teal'}\r\n                                            onClick={() => this.handleAdd(this.state.carty[item])}/>\r\n                                </Button.Group>\r\n                            </Container>\r\n                        </Segment>\r\n                    );\r\n                    return (\r\n                        <Container>\r\n                            {items}\r\n                            <Modal closeIcon\r\n                                   trigger={\r\n                                       <Button color={'green'} fluid content={'Checkout'}/>\r\n                                   }\r\n                            >\r\n                                <Header icon={'shopping cart'} content={'Checkout'}/>\r\n                                <Modal.Content>\r\n                                    <Form>\r\n                                        <Form.Group>\r\n                                            <Form.Input icon={'male'}\r\n                                                        name={'firstName'}\r\n                                                        defaultValue={this.state.formData.firstName}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        error={this.state.error['firstName']}\r\n                                                        placeholder={'First Name'}/>\r\n                                            <Form.Input icon={'male'}\r\n                                                        name={'lastName'}\r\n                                                        defaultValue={this.state.formData.lastName}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        error={this.state.error['lastName']}\r\n                                                        placeholder={'Last Name'}/>\r\n                                            <Form.Input icon={'mail'}\r\n                                                        name={'email'}\r\n                                                        defaultValue={this.state.formData.email}\r\n                                                        error={this.state.error['email']}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        placeholder={'E-mail'}/>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Input icon={'address book'}\r\n                                                        name={'address'}\r\n                                                        defaultValue={this.state.formData.address}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        error={this.state.error['address']}\r\n                                                        placeholder={'Address'}/>\r\n                                            <Form.Input icon={'credit card'}\r\n                                                        name={'ccId'}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        error={this.state.error['ccId']}\r\n                                                        placeholder={'Credit Card'}\r\n                                            />\r\n                                            <Form.Input icon={'calendar'}\r\n                                                        name={'expiration'}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        error={this.state.error['expiration']}\r\n                                                        placeholder={'Expiration (YYYY-MM-DD)'}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Modal.Content>\r\n                                <Modal.Actions>\r\n                                    <Modal\r\n                                        trigger={\r\n                                            <Button color={'green'}\r\n                                                    content={'Confirm'}\r\n                                                    disabled={this.state.disabled}\r\n                                                    onClick={this.handleCheckout}\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <Header icon={'checkmark'} content={'Order Confirmed'}/>\r\n                                        <Modal.Content>\r\n                                            {\r\n                                                this.state.transaction ?\r\n                                                    <Orders res={this.state.res} movies={this.state.carty}/>:\r\n                                                    <MyLoader/>\r\n                                            }\r\n                                        </Modal.Content>\r\n                                    </Modal>\r\n                                </Modal.Actions>\r\n                            </Modal>\r\n                        </Container>\r\n                    );\r\n                }\r\n                else {\r\n                    return (\r\n                        <EmptyCart/>\r\n                    );\r\n                }\r\n            }\r\n            catch {\r\n                return (\r\n                    <EmptyCart/>\r\n                );\r\n            }\r\n        }\r\n        else if (this.state.mounted && !this.state.valid) {\r\n            return (\r\n                <Redirect to={\"/login\"}/>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <MyLoader/>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cart;\r\nexport {isEmpty};","import Login from \"../Login/Login\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {isEmpty} from \"../Cart/Cart\";\r\n\r\nclass EmployeeLogin extends Login{\r\n  componentDidMount() {\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/employeelogin', {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    }).then(\r\n      (res) => {\r\n        if (res.status === 403) {\r\n          console.log(\"Invalid session\");\r\n        } else {\r\n          console.log(this.props);\r\n          if(isEmpty(this.props.employee)){\r\n            console.log(\"...but not as employee\")\r\n            this.setState({valid: false});\r\n          }\r\n          else{\r\n            this.setState({valid: true});\r\n          }\r\n        }\r\n        this.setState({mounted: true});\r\n      }\r\n    ).catch((error) =>\r\n      console.log(error)\r\n    )\r\n  }\r\n  getRetVal() {\r\n    return (\r\n      <Redirect to={\"/employee\"}/>\r\n    );\r\n  }\r\n  getSession(creds) {\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/employeelogin', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(creds)\r\n    }).then(\r\n      (res) => {\r\n        if (res.status === 403) {\r\n          document.getElementById(\"Form\").reset();\r\n          this.setState({valid: false});\r\n          this.setState({error: true});\r\n        } else {\r\n          this.setState({valid: true});\r\n        }\r\n        return res.json();\r\n      }\r\n    ).then(\r\n      data => {\r\n        this.props.getCust(data);\r\n        console.log(data);\r\n      }\r\n    )\r\n      .catch((error) =>\r\n        console.log(error)\r\n      )\r\n  }\r\n}\r\nexport default EmployeeLogin;","import React, {Component} from 'react';\r\nimport {Button, Container, Form, Grid, Header, Icon, Message, Segment} from \"semantic-ui-react\";\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\nimport JSONTree from \"react-json-tree\";\r\n\r\nconst theme = {\r\n  scheme: 'atelier forest',\r\n  author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/forest)',\r\n  base00: '#1b1918',\r\n  base01: '#2c2421',\r\n  base02: '#68615e',\r\n  base03: '#766e6b',\r\n  base04: '#9c9491',\r\n  base05: '#a8a19f',\r\n  base06: '#e6e2e0',\r\n  base07: '#f1efee',\r\n  base08: '#f22c40',\r\n  base09: '#df5320',\r\n  base0A: '#d5911a',\r\n  base0B: '#5ab738',\r\n  base0C: '#00ad9c',\r\n  base0D: '#407ee7',\r\n  base0E: '#6666ea',\r\n  base0F: '#c33ff3'\r\n};\r\n\r\nclass EmployeeDashboard extends Component {\r\n  state = {\r\n    schema: {},\r\n    loading: true,\r\n    formData: {\r\n      title: '',\r\n      year: '0',\r\n      director: '',\r\n      star: '',\r\n      genre: '',\r\n      starname: '',\r\n      stardob: '0',\r\n      genrename: ''\r\n    },\r\n    has_message: false,\r\n    message: null\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  getSchemaDatabase() {\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/employee?schema=true', {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    }).then(\r\n      (res) => res.json()\r\n    ).then(\r\n      data => {\r\n        this.setState({schema: data, loading: false});\r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSchemaDatabase();\r\n  }\r\n  handleInputChange(e) {\r\n    let formData = Object.assign({}, this.state.formData);\r\n    formData[e.target.name] = e.target.value;\r\n    this.setState({formData})\r\n  };\r\n  handleMovie = event => {\r\n    event.preventDefault();\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/employee?title='+this.state.formData.title+\r\n      '&director='+this.state.formData.director+'&year='+this.state.formData.year+'&star='+\r\n      this.state.formData.star+\"&genre=\"+this.state.formData.genre, {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    }).then(\r\n      (res) => res.json()\r\n    ).then(\r\n      data => {\r\n        this.setState({message: data[\"message\"], has_message: true});\r\n      }\r\n    )\r\n  };\r\n  handleStar = event => {\r\n    event.preventDefault();\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/employee?starname='+this.state.formData.starname+\r\n      \"&stardob=\"+this.state.formData.stardob, {\r\n      method: 'get',\r\n      credentials: 'include'\r\n    }).then(\r\n      (res) => res.json()\r\n    ).then(\r\n      data => {\r\n        console.log(data);\r\n        this.setState({message: data[\"message\"], has_message: true});\r\n      }\r\n    )\r\n  };\r\n  handleGenre = event => {\r\n    event.preventDefault();\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/employee?genrename='+this.state.formData.genrename, {\r\n      method: 'get',\r\n      credentials: 'include'\r\n    }).then(\r\n      (res) => res.json()\r\n    ).then(\r\n      data => {\r\n        console.log(data);\r\n        this.setState({message: data[\"message\"], has_message: true});\r\n      }\r\n    )\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {\r\n          this.state.loading ?\r\n            <MyLoader/> :\r\n            <Grid style={{marginTop: \"3em\"}}>\r\n              <Grid.Column width={5}>\r\n                <JSONTree data={this.state.schema} theme={theme}/>\r\n              </Grid.Column>\r\n              <Grid.Column width={11}>\r\n                {this.state.has_message ?\r\n                  <Message success header={\"Result of Inserts\"}\r\n                           list={this.state.message}/>:\r\n                  null\r\n                }\r\n                <Segment>\r\n                  <Form onSubmit={this.handleMovie}>\r\n                    <Header as={'h1'}>\r\n                      <Icon name={'film'} inverted circular/>\r\n                      Movie Input\r\n                    </Header>\r\n                    <Form.Group>\r\n                      <Form.Input icon={'film'}\r\n                                  name={'title'}\r\n                                  onChange={this.handleInputChange}\r\n                                  placeholder={'Title'}/>\r\n                      <Form.Input icon={'male'}\r\n                                  name={'director'}\r\n                                  onChange={this.handleInputChange}\r\n                                  placeholder={'Director'}/>\r\n                      <Form.Input icon={'calendar'}\r\n                                  name={'year'}\r\n                                  onChange={this.handleInputChange}\r\n                                  placeholder={'Year'}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Form.Input icon={'star'}\r\n                                  name={'star'}\r\n                                  onChange={this.handleInputChange}\r\n                                  placeholder={'Star'}/>\r\n                      <Form.Input icon={'linkify'}\r\n                                  name={'genre'}\r\n                                  onChange={this.handleInputChange}\r\n                                  placeholder={'Genre'}/>\r\n                    </Form.Group>\r\n                    <Button color={'teal'} fluid content={'Add Movie'} type={\"submit\"}/>\r\n                  </Form>\r\n                </Segment>\r\n                <Segment>\r\n                  <Form onSubmit={this.handleStar}>\r\n                    <Header as={'h1'}>\r\n                      <Icon name={'star'} inverted circular/>\r\n                      Star Input\r\n                    </Header>\r\n                    <Form.Group>\r\n                      <Form.Input icon={'star'}\r\n                                  name={'starname'}\r\n                                  onChange={this.handleInputChange}\r\n                                  placeholder={'Star Name'}/>\r\n                      <Form.Input icon={'calendar'}\r\n                                  name={'stardob'}\r\n                                  onChange={this.handleInputChange}\r\n                                  placeholder={'Star Date of Birth'}/>\r\n                    </Form.Group>\r\n                    <Button color={'teal'} fluid content={'Add Star'} type={\"submit\"}/>\r\n                  </Form>\r\n                </Segment>\r\n                <Segment>\r\n                  <Form onSubmit={this.handleGenre}>\r\n                    <Header as={'h1'}>\r\n                      <Icon name={'linkify'} inverted circular/>\r\n                      Genre Input\r\n                    </Header>\r\n                    <Form.Input icon={'linkify'}\r\n                                name={'genrename'}\r\n                                onChange={this.handleInputChange}\r\n                                placeholder={'Genre Name'}/>\r\n                    <Button color={'teal'} fluid content={'Add Genre'} type={\"submit\"}/>\r\n                  </Form>\r\n                </Segment>\r\n              </Grid.Column>\r\n            </Grid>\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeDashboard;","import React, {Component} from 'react';\r\nimport {Form, Search} from 'semantic-ui-react';\r\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst search = value => fetch('https://' + window.location.hostname + ':8443/cs122b/fullsearch?query=' + value, {\r\n  method: 'GET',\r\n  credentials: 'include'\r\n}, console.log(\"Sending request\")).then(\r\n  (res) => res.json()\r\n).then(\r\n  data => {\r\n    let movies = [];\r\n    Object.keys(data['movies']).forEach(function (key) {\r\n      movies.push({\r\n        key: data['movies'][key]['id'],\r\n        title: data['movies'][key]['title'],\r\n        description: 'Director: ' + data['movies'][key]['director'] + ', ' + data['movies'][key]['year'],\r\n        year: data['movies'][key]['year'],\r\n        movieid: data['movies'][key]['id'],\r\n      })\r\n    });\r\n    const ret = {data, movies};\r\n    return ret;\r\n  }\r\n);\r\nconst searchDebounced = AwesomeDebouncePromise(search, 400);\r\n\r\nclass FullTextSearch extends Component {\r\n  state = {value: '', redir: false, fullredir: false, data: [], movieid: null, cache: []};\r\n\r\n  componentWillMount() {\r\n    this.resetComponent()\r\n  }\r\n  componentDidMount() {\r\n    let cache = JSON.parse(sessionStorage.getItem(\"cache\"));\r\n    if(cache !== null){\r\n      this.setState({cache})\r\n    }\r\n  }\r\n\r\n  resetComponent = () => this.setState({isLoading: false, results: []});\r\n  handleResultSelect = (e, {result}) => this.setState({\r\n    value: result.title,\r\n    redir: true,\r\n    movieid: result.movieid\r\n  }, function () {\r\n    this.setState({redir: false})\r\n  });\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({fullredir: true}, function(){\r\n      this.setState({fullredir: false});\r\n    })\r\n  };\r\n  handleSearchChange = async (e, {value}) => {\r\n    this.setState({isLoading: true, value});\r\n    if (value.length < 3) return this.resetComponent();\r\n    if(value in this.state.cache){\r\n      console.log(\"Initializing search\");\r\n      setTimeout(() => {\r\n        console.log(\"Using cache\");\r\n        console.log(this.state.cache[value]['movies']);\r\n        this.setState({\r\n          isLoading: false,\r\n          results: this.state.cache[value]['movies'],\r\n          data: this.state.cache[value]['data']\r\n        })\r\n      }, 300);\r\n    }\r\n    else{\r\n      const result = await searchDebounced(value);\r\n      setTimeout(() => {\r\n        let cache = {...this.state.cache};\r\n        cache[value] = result;\r\n        console.log(result['movies']);\r\n        this.setState({\r\n          isLoading: false,\r\n          results: result['movies'],\r\n          data: result['data'],\r\n          cache: cache\r\n        }, function(){\r\n          sessionStorage.setItem(\"cache\", JSON.stringify(this.state.cache))\r\n        })\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.redir ?\r\n            <Redirect to={{\r\n              pathname: '/movie',\r\n              search: '?id=' + this.state.movieid\r\n            }}/>\r\n            :\r\n            null\r\n        }\r\n        {\r\n          this.state.fullredir ?\r\n            <Redirect to={{\r\n              pathname: '/fullresults',\r\n              state: {data: this.state.data, value: this.state.value, reload: \"yes\"}\r\n            }}/>\r\n            : null\r\n        }\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Search\r\n            loading={this.state.isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={this.handleSearchChange}\r\n            results={this.state.results}\r\n            value={this.state.value}\r\n            input={{action: \"Submit\"}}\r\n            style={{paddingTop: \"5px\", paddingBottom: \"5px\", paddingLeft: \"10px\"}}\r\n          />\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullTextSearch;\r\n","import React from 'react';\r\nimport Movies from \"../Movies/Movies\";\r\nimport MyLoader from \"../MyLoader/MyLoader\";\r\nimport {Container, Pagination} from \"semantic-ui-react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {SearchResults} from \"../MovieList/MovieList\";\r\n\r\nclass FullTextResults extends Movies {\r\n  state = {\r\n    activeIndex: 0,\r\n    valid: false,\r\n    value: \"\",\r\n    mounted: false,\r\n    data: [],\r\n    activePage: 1,\r\n    pages: 0,\r\n    limit: 10\r\n  };\r\n\r\n  handlePaginationChange = (e, {activePage}) => this.setState({activePage}, this.getMovies);\r\n\r\n  getMovies() {\r\n    this.setState({search: \"loading\"});\r\n    fetch('https://' + window.location.hostname + ':8443/cs122b/fullsearch?query=' + this.state.value +\r\n      '&offset=' + ((this.state.activePage - 1) * this.state.limit), {method: 'GET', credentials: 'include'}).then(\r\n      (res) => res.json()\r\n    ).then(\r\n      data => this.setState({data: data.movies, search: \"received\"}, function(){console.log(this.state)})\r\n    )\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    super.componentDidMount();\r\n    this.setState({\r\n      data: this.props.location.state.data.movies,\r\n      total: this.props.location.state.data.numRecords,\r\n      value: this.props.location.state.value,\r\n      search: \"received\"\r\n    }, function () {\r\n      this.setState({pages: Math.ceil(this.state.total / this.state.limit)})\r\n    })\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.location.state.value !== this.state.value) {\r\n      this.setState({\r\n        data: nextProps.location.state.data.movies,\r\n        total: nextProps.location.state.data.numRecords,\r\n        value: nextProps.location.state.value,\r\n        search: \"received\"\r\n      }, function () {\r\n        this.setState({pages: Math.ceil(this.state.total / this.state.limit)})\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.mounted && this.state.valid) {\r\n      return (\r\n        <Container>\r\n          <Container textAlign={\"center\"} style={{marginBottom: \"3em\"}}>\r\n            <Pagination\r\n              totalPages={this.state.pages}\r\n              activePage={this.state.activePage}\r\n              onPageChange={this.handlePaginationChange}\r\n              siblingRange={2}\r\n            />\r\n          </Container>\r\n          <SearchResults data={this.state.data} handleAddToCart={this.props.handleAddToCart}/>\r\n        </Container>\r\n      );\r\n    } else if (!this.state.valid && this.state.mounted) {\r\n      return (\r\n        <Redirect to={\"/login\"}/>\r\n      )\r\n    } else {\r\n      return (<MyLoader/>);\r\n    }\r\n  }\r\n}\r\n\r\nexport default FullTextResults;","import React, {Component} from 'react';\r\nimport {BrowserRouter, Link, Route} from 'react-router-dom';\r\nimport {Menu} from \"semantic-ui-react\";\r\nimport Movies from \"./Movies/Movies.js\";\r\nimport Star from \"./Star/Star.js\";\r\nimport Film from \"./Film/Film.js\";\r\nimport Login from \"./Login/Login.js\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Search from \"./Search/Search\";\r\nimport Browse from \"./Browse/Browse\";\r\nimport Cart, {isEmpty} from \"./Cart/Cart\";\r\nimport EmployeeLogin from \"./Employee/EmployeeLogin\";\r\nimport EmployeeDashboard from \"./Employee/EmployeeDashboard\";\r\nimport FullTextSearch from \"./FullTextSearch/FullTextSearch\";\r\nimport FullTextResults from \"./FullTextSearch/FullTextResults\";\r\n\r\nclass App extends Component {\r\n  state = {cart: {}, customer: {}, employee: {}, is_employee: false};\r\n\r\n  constructor() {\r\n    super();\r\n    this.getCust = this.getCust.bind(this);\r\n    this.getEmp = this.getEmp.bind(this);\r\n  }\r\n\r\n  handleAddToCart = (item) => {\r\n    let crt = {...this.state.cart};\r\n    if (item.id in crt) {\r\n      crt[item.id][\"quantity\"] += 1\r\n    }\r\n    else {\r\n      crt[item.id] = item;\r\n      crt[item.id][\"quantity\"] = 1;\r\n    }\r\n    this.setState({cart: crt}, function () {\r\n      sessionStorage.setItem(\"cart\", JSON.stringify(this.state.cart));\r\n    });\r\n  };\r\n  handleUpdateCart = (carty) => {\r\n    this.setState({cart: carty});\r\n  };\r\n\r\n  getEmp(emp) {\r\n    this.setState({employee: emp, is_employee: true});\r\n    sessionStorage.setItem(\"employee\", JSON.stringify(emp));\r\n  }\r\n\r\n  getCust(cust) {\r\n    this.setState({customer: cust});\r\n    sessionStorage.setItem(\"customer\", JSON.stringify(cust));\r\n  }\r\n\r\n  componentDidMount() {\r\n    let crt = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n    if (!isEmpty(crt)) {\r\n      this.setState({cart: crt});\r\n    }\r\n    let cust = JSON.parse(sessionStorage.getItem(\"customer\"));\r\n    if (!isEmpty(cust)) {\r\n      this.setState({customer: cust}, function () {\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BrowserRouter basename={'/cs122b'}>\r\n        {/*<BrowserRouter>*/}\r\n          <div>\r\n            {this.state.is_employee ?\r\n              <Menu inverted fluid widths={1}>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to={'/emplogin'}\r\n                  name='emplogin'\r\n                  header\r\n                >\r\n                  Employee Login\r\n                </Menu.Item>\r\n              </Menu>\r\n              :\r\n              <Menu inverted widths={6}>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to={'/'}\r\n                  name='top-charts'\r\n                  header\r\n                >\r\n                  Top Twenty\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to={'/search'}\r\n                  name='search'\r\n                  header\r\n                >\r\n                  Search\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to={{\r\n                    pathname: '/browse',\r\n                    state: {genre: \"\", reload: \"no\"}\r\n                  }}\r\n                  name='browse'\r\n                  header\r\n                >\r\n                  Browse\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to={'/cart'}\r\n                  name='cart'\r\n                  header\r\n                >\r\n                  Checkout\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                  as={Link}\r\n                  to={'/emplogin'}\r\n                  name='emplogin'\r\n                  header\r\n                >\r\n                  Employee Login\r\n                </Menu.Item>\r\n                {isEmpty(this.state.customer) ? null:\r\n                  <Menu.Item\r\n                    as={FullTextSearch}\r\n                  />\r\n                }\r\n              </Menu>\r\n            }\r\n            <Route path=\"/\" exact render={(props) => <Movies {...props} handleAddToCart={this.handleAddToCart}/>}/>\r\n            <Route path=\"/star\" exact render={(props) => <Star {...props} handleAddToCart={this.handleAddToCart}/>}/>\r\n            <Route path=\"/movie\" exact render={(props) => <Film {...props} handleAddToCart={this.handleAddToCart}/>}/>\r\n            <Route path=\"/login\" exact render={(props) => <Login {...props} getCust={this.getCust}/>}/>\r\n            <Route path=\"/emplogin\" exact render={(props) => <EmployeeLogin {...props} getCust={this.getEmp}\r\n                                                                            employee={this.state.employee}/>}/>\r\n            <Route path=\"/employee\" exact render={(props) => <EmployeeDashboard {...props}/>}/>\r\n            <Route path={\"/fullresults\"} exact render={(props) => <FullTextResults {...props} handleAddToCart={this.handleAddToCart}/>}/>\r\n            <Route path=\"/search\" exact\r\n                   render={(props) => <Search {...props} handleAddToCart={this.handleAddToCart}/>}/>\r\n            <Route path=\"/browse\" exact\r\n                   render={(props) => <Browse {...props} handleAddToCart={this.handleAddToCart}/>}/>\r\n            <Route path=\"/cart\" exact render={(props) => <Cart {...props} handleUpdateCart={this.handleUpdateCart}\r\n                                                               handleAddToCart={this.handleAddToCart}\r\n                                                               customer={this.state.customer}\r\n                                                               cart={this.state.cart}/>}/>\r\n          </div>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}